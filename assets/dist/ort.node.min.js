/*!
 * ONNX Runtime Web v1.22.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var mt=Object.create;var oe=Object.defineProperty;var gt=Object.getOwnPropertyDescriptor;var bt=Object.getOwnPropertyNames;var yt=Object.getPrototypeOf,wt=Object.prototype.hasOwnProperty;var C=(e,t)=>()=>(e&&(t=e(e=0)),t);var xe=(e,t)=>{for(var n in t)oe(e,n,{get:t[n],enumerable:!0})},ne=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of bt(t))!wt.call(e,r)&&r!==n&&oe(e,r,{get:()=>t[r],enumerable:!(s=gt(t,r))||s.enumerable});return e},D=(e,t,n)=>(ne(e,t,"default"),n&&ne(n,t,"default")),ht=(e,t,n)=>(n=e!=null?mt(yt(e)):{},ne(t||!e||!e.__esModule?oe(n,"default",{value:e,enumerable:!0}):n,e)),Ie=e=>ne(oe({},"__esModule",{value:!0}),e);var W,se=C(()=>{"use strict";W=!!(typeof process<"u"&&process.versions&&process.versions.node)});var St,Et,F,Ue,Ae,Ot,Tt,Lt,vt,Ce,Be,be=C(()=>{"use strict";se();St=W||typeof location>"u"?void 0:location.origin,Et=()=>{if(!W)return typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0},F=Et(),Ue=()=>{if(F&&!F.startsWith("blob:"))return F.substring(0,F.lastIndexOf("/")+1)},Ae=(e,t)=>{try{let n=t??F;return(n?new URL(e,n):new URL(e)).origin===St}catch{return!1}},Ot=(e,t)=>{let n=t??F;try{return(n?new URL(e,n):new URL(e)).href}catch{return}},Tt=(e,t)=>`${t??"./"}${e}`,Lt=async e=>{let n=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(n)},vt=async e=>(await import(/*webpackIgnore:true*/e)).default,Ce=void 0,Be=async(e,t,n)=>{if(!e&&!t&&Ce&&F&&Ae(F))return[void 0,Ce];{let s="ort-wasm-simd-threaded.mjs",r=e??Ot(s,t),a=!W&&n&&r&&!Ae(r,t),o=a?await Lt(r):r??Tt(s,t);return[a?o:void 0,await vt(o)]}}});var ye,we,ae,Me,Pt,xt,ke,O,V=C(()=>{"use strict";be();we=!1,ae=!1,Me=!1,Pt=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},xt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ke=async e=>{if(we)return Promise.resolve();if(ae)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Me)throw new Error("previous call to 'initializeWebAssembly()' failed.");ae=!0;let t=e.initTimeout,n=e.numThreads;if(!xt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=Pt();n>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let r=e.wasmPaths,a=typeof r=="string"?r:void 0,o=r?.mjs,i=o?.href??o,c=r?.wasm,f=c?.href??c,h=e.wasmBinary,[y,u]=await Be(i,a,n>1),l=!1,x=[];if(t>0&&x.push(new Promise(S=>{setTimeout(()=>{l=!0,S()},t)})),x.push(new Promise((S,m)=>{let b={numThreads:n};if(h)b.wasmBinary=h;else if(f||a)b.locateFile=d=>f??a+d;else if(i&&i.indexOf("blob:")!==0)b.locateFile=d=>new URL(d,i).href;else if(y){let d=Ue();d&&(b.locateFile=w=>d+w)}u(b).then(d=>{ae=!1,we=!0,ye=d,S(),y&&URL.revokeObjectURL(y)},d=>{ae=!1,Me=!0,m(d)})})),await Promise.race(x),l)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},O=()=>{if(we&&ye)return ye;throw new Error("WebAssembly is not initialized yet.")}});var T,Z,g,ie=C(()=>{"use strict";V();T=(e,t)=>{let n=O(),s=n.lengthBytesUTF8(e)+1,r=n._malloc(s);return n.stringToUTF8(e,r,s),t.push(r),r},Z=(e,t,n,s)=>{if(typeof e=="object"&&e!==null){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach(([r,a])=>{let o=t?t+r:r;if(typeof a=="object")Z(a,o+".",n,s);else if(typeof a=="string"||typeof a=="number")s(o,a.toString());else if(typeof a=="boolean")s(o,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},g=e=>{let t=O(),n=t.stackSave();try{let s=t.PTR_SIZE,r=t.stackAlloc(2*s);t._OrtGetLastError(r,r+s);let a=Number(t.getValue(r,s===4?"i32":"i64")),o=t.getValue(r+s,"*"),i=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(n)}}});var De,We=C(()=>{"use strict";V();ie();De=e=>{let t=O(),n=0,s=[],r=e||{};try{if(e?.logSeverityLevel===void 0)r.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)r.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(r.terminate=!1);let a=0;return e?.tag!==void 0&&(a=T(e.tag,s)),n=t._OrtCreateRunOptions(r.logSeverityLevel,r.logVerbosityLevel,!!r.terminate,a),n===0&&g("Can't create run options."),e?.extra!==void 0&&Z(e.extra,"",new WeakSet,(o,i)=>{let c=T(o,s),f=T(i,s);t._OrtAddRunConfigEntry(n,c,f)!==0&&g(`Can't set a run config entry: ${o} - ${i}.`)}),[n,s]}catch(a){throw n!==0&&t._OrtReleaseRunOptions(n),s.forEach(o=>t._free(o)),a}}});var It,_t,At,Ct,Fe,Re=C(()=>{"use strict";V();ie();It=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},_t=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},At=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(e.enableMemPattern=!1)},Ct=(e,t,n)=>{for(let s of t){let r=typeof s=="string"?s:s.name;switch(r){case"webnn":if(r="WEBNN",typeof s!="string"){let i=s?.deviceType;if(i){let c=T("deviceType",n),f=T(i,n);O()._OrtAddSessionConfigEntry(e,c,f)!==0&&g(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(r="JS",typeof s!="string"){let o=s;if(o?.preferredLayout){if(o.preferredLayout!=="NCHW"&&o.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${o.preferredLayout}`);let i=T("preferredLayout",n),c=T(o.preferredLayout,n);O()._OrtAddSessionConfigEntry(e,i,c)!==0&&g(`Can't set a session config entry: 'preferredLayout' - ${o.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${r}`)}let a=T(r,n);O()._OrtAppendExecutionProvider(e,a)!==0&&g(`Can't append execution provider: ${r}.`)}},Fe=e=>{let t=O(),n=0,s=[],r=e||{};At(r);try{let a=It(r.graphOptimizationLevel??"all"),o=_t(r.executionMode??"sequential"),i=typeof r.logId=="string"?T(r.logId,s):0,c=r.logSeverityLevel??2;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log serverity level is not valid: ${c}`);let f=r.logVerbosityLevel??0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);let h=typeof r.optimizedModelFilePath=="string"?T(r.optimizedModelFilePath,s):0;if(n=t._OrtCreateSessionOptions(a,!!r.enableCpuMemArena,!!r.enableMemPattern,o,!!r.enableProfiling,0,i,c,f,h),n===0&&g("Can't create session options."),r.executionProviders&&Ct(n,r.executionProviders,s),r.enableGraphCapture!==void 0){if(typeof r.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${r.enableGraphCapture}`);let y=T("enableGraphCapture",s),u=T(r.enableGraphCapture.toString(),s);t._OrtAddSessionConfigEntry(n,y,u)!==0&&g(`Can't set a session config entry: 'enableGraphCapture' - ${r.enableGraphCapture}.`)}if(r.freeDimensionOverrides)for(let[y,u]of Object.entries(r.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let l=T(y,s);t._OrtAddFreeDimensionOverride(n,l,u)!==0&&g(`Can't set a free dimension override: ${y} - ${u}.`)}return r.extra!==void 0&&Z(r.extra,"",new WeakSet,(y,u)=>{let l=T(y,s),x=T(u,s);t._OrtAddSessionConfigEntry(n,l,x)!==0&&g(`Can't set a session config entry: ${y} - ${u}.`)}),[n,s]}catch(a){throw n!==0&&t._OrtReleaseSessionOptions(n)!==0&&g("Can't release session options."),s.forEach(o=>t._free(o)),a}}});var q,Ne,J,je,$e,ue,ce,ze,he=C(()=>{"use strict";q=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ne=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},J=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof t=="number"?t:t.reduce((r,a)=>r*a,1);return n>0?Math.ceil(s*n):void 0},je=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},$e=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ue=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ce=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ze=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}});var K,Se=C(()=>{"use strict";se();K=async e=>{if(typeof e=="string")if(W)try{let{readFile:t}=require("node:fs/promises");return new Uint8Array(await t(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let{createReadStream:n}=require("node:fs"),s=n(e),r=[];for await(let a of s)r.push(a);return new Uint8Array(Buffer.concat(r))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),s=n?parseInt(n,10):0;if(s<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let r=t.body.getReader(),a;try{a=new ArrayBuffer(s)}catch(i){if(i instanceof RangeError){let c=Math.ceil(s/65536);a=new WebAssembly.Memory({initial:c,maximum:c}).buffer}else throw i}let o=0;for(;;){let{done:i,value:c}=await r.read();if(i)break;let f=c.byteLength;new Uint8Array(a,o,f).set(c),o+=f}return new Uint8Array(a,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var Ut,He,Ve,Y,Bt,Ee,qe,Je,Ge,Ye,Xe,Ze=C(()=>{"use strict";We();Re();he();V();ie();Se();Ut=(e,t)=>{O()._OrtInit(e,t)!==0&&g("Can't initialize onnxruntime.")},He=async e=>{Ut(e.wasm.numThreads,$e(e.logLevel))},Ve=async(e,t)=>{},Y=new Map,Bt=e=>{let t=O(),n=t.stackSave();try{let s=t.PTR_SIZE,r=t.stackAlloc(2*s);t._OrtGetInputOutputCount(e,r,r+s)!==0&&g("Can't get session input/output count.");let o=s===4?"i32":"i64";return[Number(t.getValue(r,o)),Number(t.getValue(r+s,o))]}finally{t.stackRestore(n)}},Ee=e=>{let t=O(),n=t._malloc(e.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},qe=async(e,t)=>{let n,s,r=O();Array.isArray(e)?[n,s]=e:e.buffer===r.HEAPU8.buffer?[n,s]=[e.byteOffset,e.byteLength]:[n,s]=Ee(e);let a=0,o=0,i=0,c=[],f=[],h=[];try{if([o,c]=Fe(t),t?.externalData&&r.mountExternalData){let d=[];for(let w of t.externalData){let v=typeof w=="string"?w:w.path;d.push(K(typeof w=="string"?w:w.data).then(A=>{r.mountExternalData(v,A)}))}await Promise.all(d)}for(let d of t?.executionProviders??[])if((typeof d=="string"?d:d.name)==="webnn"){if(r.shouldTransferToMLTensor=!1,typeof d!="string"){let v=d,A=v?.context,R=v?.gpuDevice,N=v?.deviceType,ee=v?.powerPreference;A?r.currentContext=A:R?r.currentContext=await r.jsepCreateMLContext(R):r.currentContext=await r.jsepCreateMLContext({deviceType:N,powerPreference:ee})}else r.currentContext=await r.jsepCreateMLContext();break}a=await r._OrtCreateSession(n,s,o),a===0&&g("Can't create a session."),r.jsepOnCreateSession?.(),r.currentContext&&(r.jsepRegisterMLContext(a,r.currentContext),r.currentContext=void 0,r.shouldTransferToMLTensor=!0);let[y,u]=Bt(a),l=!!t?.enableGraphCapture,x=[],S=[],m=[];for(let d=0;d<y;d++){let w=r._OrtGetInputName(a,d);w===0&&g("Can't get an input name."),f.push(w),x.push(r.UTF8ToString(w))}for(let d=0;d<u;d++){let w=r._OrtGetOutputName(a,d);w===0&&g("Can't get an output name."),h.push(w);let v=r.UTF8ToString(w);S.push(v)}return Y.set(a,[a,f,h,null,l,!1]),[a,x,S]}catch(y){throw f.forEach(u=>r._OrtFree(u)),h.forEach(u=>r._OrtFree(u)),i!==0&&r._OrtReleaseBinding(i)!==0&&g("Can't release IO binding."),a!==0&&r._OrtReleaseSession(a)!==0&&g("Can't release session."),y}finally{r._free(n),o!==0&&r._OrtReleaseSessionOptions(o)!==0&&g("Can't release session options."),c.forEach(y=>r._free(y)),r.unmountExternalData?.()}},Je=e=>{let t=O(),n=Y.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,r,a,o,i]=n;o&&(i&&t._OrtClearBoundOutputs(o.handle)!==0&&g("Can't clear bound outputs."),t._OrtReleaseBinding(o.handle)!==0&&g("Can't release IO binding.")),t.jsepOnReleaseSession?.(e),r.forEach(c=>t._OrtFree(c)),a.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(s)!==0&&g("Can't release session."),Y.delete(e)},Ge=async(e,t,n,s,r,a=!1)=>{if(!e){t.push(0);return}let o=O(),i=o.PTR_SIZE,c=e[0],f=e[1],h=e[3],y=h,u,l;if(c==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${r} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let m=e[2].gpuBuffer;l=J(q(c),f);let b=o.jsepRegisterBuffer;if(!b)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');u=b(s,r,m,l)}else if(h==="ml-tensor"){let m=e[2].mlTensor;l=J(q(c),f);let b=o.jsepRegisterMLTensor;if(!b)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');u=b(s,m,q(c),f)}else{let m=e[2];if(Array.isArray(m)){l=i*m.length,u=o._malloc(l),n.push(u);for(let b=0;b<m.length;b++){if(typeof m[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);o.setValue(u+b*i,T(m[b],n),"*")}}else{let b=o.jsepIsGraphInput;if(c!=="string"&&b){let d=o._OrtGetInputName(s,r),w=o.UTF8ToString(d);if(b(s,w)){let v=q(c);l=J(v,f),y="ml-tensor";let A=o.jsepCreateTemporaryTensor,R=o.jsepUploadTensor;if(!A||!R)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let N=await A(s,v,f);R(N,new Uint8Array(m.buffer,m.byteOffset,m.byteLength)),u=N}else l=m.byteLength,u=o._malloc(l),n.push(u),o.HEAPU8.set(new Uint8Array(m.buffer,m.byteOffset,l),u)}else l=m.byteLength,u=o._malloc(l),n.push(u),o.HEAPU8.set(new Uint8Array(m.buffer,m.byteOffset,l),u)}}let x=o.stackSave(),S=o.stackAlloc(4*f.length);try{f.forEach((b,d)=>o.setValue(S+d*i,b,i===4?"i32":"i64"));let m=o._OrtCreateTensor(q(c),u,l,S,f.length,ze(y));m===0&&g(`Can't create tensor for input/output. session=${s}, index=${r}.`),t.push(m)}finally{o.stackRestore(x)}},Ye=async(e,t,n,s,r,a)=>{let o=O(),i=o.PTR_SIZE,c=Y.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let f=c[0],h=c[1],y=c[2],u=c[3],l=c[4],x=c[5],S=t.length,m=s.length,b=0,d=[],w=[],v=[],A=[],R=o.stackSave(),N=o.stackAlloc(S*i),ee=o.stackAlloc(S*i),pe=o.stackAlloc(m*i),Le=o.stackAlloc(m*i);try{[b,d]=De(a);for(let p=0;p<S;p++)await Ge(n[p],w,A,e,t[p],l);for(let p=0;p<m;p++)await Ge(r[p],v,A,e,S+s[p],l);for(let p=0;p<S;p++)o.setValue(N+p*i,w[p],"*"),o.setValue(ee+p*i,h[t[p]],"*");for(let p=0;p<m;p++)o.setValue(pe+p*i,v[p],"*"),o.setValue(Le+p*i,y[s[p]],"*");o.jsepOnRunStart?.(f);let U;U=await o._OrtRun(f,ee,N,S,Le,m,pe,b),U!==0&&g("failed to call OrtRun().");let z=[];for(let p=0;p<m;p++){let G=Number(o.getValue(pe+p*i,"*"));if(G===v[p]){z.push(r[p]);continue}let ve=o.stackSave(),B=o.stackAlloc(4*i),X=!1,L,_=0;try{o._OrtGetTensorData(G,B,B+i,B+2*i,B+3*i)!==0&&g(`Can't access output tensor data on index ${p}.`);let me=i===4?"i32":"i64",te=Number(o.getValue(B,me));_=o.getValue(B+i,"*");let Pe=o.getValue(B+i*2,"*"),dt=Number(o.getValue(B+i*3,me)),j=[];for(let P=0;P<dt;P++)j.push(Number(o.getValue(Pe+P*i,me)));o._OrtFree(Pe)!==0&&g("Can't free memory for tensor dims.");let $=j.reduce((P,E)=>P*E,1);L=Ne(te);let re=u?.outputPreferredLocations[s[p]];if(L==="string"){if(re==="gpu-buffer"||re==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let P=[];for(let E=0;E<$;E++){let H=o.getValue(_+E*i,"*"),ge=o.getValue(_+(E+1)*i,"*"),pt=E===$-1?void 0:ge-H;P.push(o.UTF8ToString(H,pt))}z.push([L,j,P,"cpu"])}else if(re==="gpu-buffer"&&$>0){let P=o.jsepGetBuffer;if(!P)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let E=P(_),H=J(te,$);if(H===void 0||!ue(L))throw new Error(`Unsupported data type: ${L}`);X=!0,z.push([L,j,{gpuBuffer:E,download:o.jsepCreateDownloader(E,H,L),dispose:()=>{o._OrtReleaseTensor(G)!==0&&g("Can't release tensor.")}},"gpu-buffer"])}else if(re==="ml-tensor"&&$>0){let P=o.jsepEnsureTensor,E=o.jsepIsInt64Supported;if(!P||!E)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(J(te,$)===void 0||!ce(L))throw new Error(`Unsupported data type: ${L}`);if(L==="int64"&&!E(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let ge=await P(e,_,te,j,!1);X=!0,z.push([L,j,{mlTensor:ge,download:o.jsepCreateMLTensorDownloader(_,L),dispose:()=>{o.jsepReleaseTensorId(_),o._OrtReleaseTensor(G)}},"ml-tensor"])}else{let P=je(L),E=new P($);new Uint8Array(E.buffer,E.byteOffset,E.byteLength).set(o.HEAPU8.subarray(_,_+E.byteLength)),z.push([L,j,E,"cpu"])}}finally{o.stackRestore(ve),L==="string"&&_&&o._free(_),X||o._OrtReleaseTensor(G),o.jsepOnRunEnd?.(f)}}return u&&!l&&(o._OrtClearBoundOutputs(u.handle)!==0&&g("Can't clear bound outputs."),Y.set(e,[f,h,y,u,l,!1])),z}finally{o.stackRestore(R),w.forEach(U=>o._OrtReleaseTensor(U)),v.forEach(U=>o._OrtReleaseTensor(U)),A.forEach(U=>o._free(U)),b!==0&&o._OrtReleaseRunOptions(b),d.forEach(U=>o._free(U))}},Xe=e=>{let t=O(),n=Y.get(e);if(!n)throw new Error("invalid session id");let s=n[0],r=t._OrtEndProfiling(s);r===0&&g("Can't get an profile file name."),t._OrtFree(r)}});var le,Oe,Ke,Qe,et,tt,rt,nt,ot,st,at,Te=C(()=>{"use strict";le=require("onnxruntime-common");Ze();V();be();Oe=!1,Ke=!1,Qe=!1,et=async()=>{if(!Ke){if(Oe)throw new Error("multiple calls to 'initWasm()' detected.");if(Qe)throw new Error("previous call to 'initWasm()' failed.");Oe=!0;try{await ke(le.env.wasm),await He(le.env),Ke=!0}catch(e){throw Qe=!0,e}finally{Oe=!1}}},tt=async e=>{await Ve(le.env,e)},rt=async e=>Ee(e),nt=async(e,t)=>qe(e,t),ot=async e=>{Je(e)},st=async(e,t,n,s,r,a)=>Ye(e,t,n,s,r,a),at=async e=>{Xe(e)}});var M,it,kt,fe,ut=C(()=>{"use strict";M=require("onnxruntime-common");Te();he();se();Se();it=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},kt=e=>{switch(e[3]){case"cpu":return new M.Tensor(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!ue(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:s,dispose:r}=e[2];return M.Tensor.fromGpuBuffer(n,{dataType:t,dims:e[1],download:s,dispose:r})}case"ml-tensor":{let t=e[0];if(!ce(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:s,dispose:r}=e[2];return M.Tensor.fromMLTensor(n,{dataType:t,dims:e[1],download:s,dispose:r})}default:throw new Error(`invalid data location: ${e[3]}`)}},fe=class{async fetchModelAndCopyToWasmMemory(t){return rt(await K(t))}async loadModel(t,n){(0,M.TRACE_FUNC_BEGIN)();let s;typeof t=="string"?W?s=await K(t):s=await this.fetchModelAndCopyToWasmMemory(t):s=t,[this.sessionId,this.inputNames,this.outputNames]=await nt(s,n),(0,M.TRACE_FUNC_END)()}async dispose(){return ot(this.sessionId)}async run(t,n,s){(0,M.TRACE_FUNC_BEGIN)();let r=[],a=[];Object.entries(t).forEach(u=>{let l=u[0],x=u[1],S=this.inputNames.indexOf(l);if(S===-1)throw new Error(`invalid input '${l}'`);r.push(x),a.push(S)});let o=[],i=[];Object.entries(n).forEach(u=>{let l=u[0],x=u[1],S=this.outputNames.indexOf(l);if(S===-1)throw new Error(`invalid output '${l}'`);o.push(x),i.push(S)});let c=r.map((u,l)=>it(u,()=>`input "${this.inputNames[a[l]]}"`)),f=o.map((u,l)=>u?it(u,()=>`output "${this.outputNames[i[l]]}"`):null),h=await st(this.sessionId,a,c,i,f,s),y={};for(let u=0;u<h.length;u++)y[this.outputNames[i[u]]]=o[u]??kt(h[u]);return(0,M.TRACE_FUNC_END)(),y}startProfiling(){}endProfiling(){at(this.sessionId)}}});var lt={};xe(lt,{OnnxruntimeWebAssemblyBackend:()=>de,initializeFlags:()=>ct,wasmBackend:()=>Dt});var I,ct,de,Dt,ft=C(()=>{"use strict";I=require("onnxruntime-common");Te();ut();ct=()=>{if((typeof I.env.wasm.initTimeout!="number"||I.env.wasm.initTimeout<0)&&(I.env.wasm.initTimeout=0),I.env.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof I.env.wasm.proxy!="boolean"&&(I.env.wasm.proxy=!1),typeof I.env.wasm.trace!="boolean"&&(I.env.wasm.trace=!1),typeof I.env.wasm.numThreads!="number"||!Number.isInteger(I.env.wasm.numThreads)||I.env.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)I.env.wasm.numThreads=1;else{let e=typeof navigator>"u"?require("node:os").cpus().length:navigator.hardwareConcurrency;I.env.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},de=class{async init(t){ct(),await et(),await tt(t)}async createInferenceSessionHandler(t,n){let s=new fe;return await s.loadModel(t,n),Promise.resolve(s)}},Dt=new de});var k={};xe(k,{default:()=>Ft});module.exports=Ie(k);D(k,require("onnxruntime-common"),module.exports);var Wt=ht(require("onnxruntime-common")),Q=require("onnxruntime-common");var _e="1.22.0";var Ft=Wt;{let e=(ft(),Ie(lt)).wasmBackend;(0,Q.registerBackend)("cpu",e,10),(0,Q.registerBackend)("wasm",e,10)}Object.defineProperty(Q.env.versions,"web",{value:_e,enumerable:!0});0&&(module.exports={...require("onnxruntime-common")});
//# sourceMappingURL=ort.node.min.js.map
